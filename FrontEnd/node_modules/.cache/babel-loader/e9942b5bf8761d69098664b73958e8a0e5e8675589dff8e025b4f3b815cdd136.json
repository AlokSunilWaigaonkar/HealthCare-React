{"ast":null,"code":"var _jsxFileName = \"/Users/alokwaigaonkar/health_care/FrontEnd/src/components/Doctor/PatientList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PatientCard from \"./PatientCard\";\nimport api from \"../../api\"; // import your api.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PatientList() {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const doctorId = localStorage.getItem(\"id\");\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const res = await api.get(`/doctor/${doctorId}/patients`);\n        setPatients(res.data.data);\n      } catch (error) {\n        console.error(\"Failed to fetch patients:\", error);\n        setPatients([]);\n      }\n    };\n    if (doctorId) {\n      fetchPatients();\n    }\n  }, [doctorId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-list row\",\n    style: {\n      marginTop: \"4rem\"\n    },\n    children: patients.length > 0 ? patients.map((patient, index) => /*#__PURE__*/_jsxDEV(PatientCard, {\n      name: patient.firstName + \" \" + patient.lastName,\n      contact: patient.contactNo,\n      email: patient.email,\n      gender: patient.gender\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No patients found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientList, \"nJK7y1Lqv0Y1Ja5iIyK+yMnyHxs=\");\n_c = PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useState","useEffect","PatientCard","api","jsxDEV","_jsxDEV","PatientList","_s","patients","setPatients","selectedPatient","setSelectedPatient","doctorId","localStorage","getItem","fetchPatients","res","get","data","error","console","className","style","marginTop","children","length","map","patient","index","name","firstName","lastName","contact","contactNo","email","gender","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alokwaigaonkar/health_care/FrontEnd/src/components/Doctor/PatientList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PatientCard from \"./PatientCard\";\nimport api from \"../../api\"; // import your api.js\n\nexport default function PatientList() {\n  const [patients, setPatients] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n\n  const doctorId = localStorage.getItem(\"id\");\n\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const res = await api.get(`/doctor/${doctorId}/patients`);\n        setPatients(res.data.data);\n      } catch (error) {\n        console.error(\"Failed to fetch patients:\", error);\n        setPatients([]);\n      }\n    };\n\n    if (doctorId) {\n      fetchPatients();\n    }\n  }, [doctorId]); \n  \n  return (\n    <div className=\"patient-list row\" style={{ marginTop: \"4rem\" }}>\n      {patients.length > 0 ? (\n        patients.map((patient, index) => (\n\n          <PatientCard\n            key={index}\n            name={patient.firstName + \" \" + patient.lastName}\n            contact={patient.contactNo}\n            email={patient.email}\n            gender={patient.gender}\n          />\n        ))\n      ) : (\n        <p>No patients found.</p>\n      )}\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,GAAG,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMY,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;EAE3Cb,SAAS,CAAC,MAAM;IACd,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,WAAWL,QAAQ,WAAW,CAAC;QACzDH,WAAW,CAACO,GAAG,CAACE,IAAI,CAACA,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDV,WAAW,CAAC,EAAE,CAAC;MACjB;IACF,CAAC;IAED,IAAIG,QAAQ,EAAE;MACZG,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBACEP,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,EAC5DhB,QAAQ,CAACiB,MAAM,GAAG,CAAC,GAClBjB,QAAQ,CAACkB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAE1BvB,OAAA,CAACH,WAAW;MAEV2B,IAAI,EAAEF,OAAO,CAACG,SAAS,GAAG,GAAG,GAAGH,OAAO,CAACI,QAAS;MACjDC,OAAO,EAAEL,OAAO,CAACM,SAAU;MAC3BC,KAAK,EAAEP,OAAO,CAACO,KAAM;MACrBC,MAAM,EAAER,OAAO,CAACQ;IAAO,GAJlBP,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACF,CAAC,gBAEFlC,OAAA;MAAAmB,QAAA,EAAG;IAAkB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACzB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChC,EAAA,CAxCuBD,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}