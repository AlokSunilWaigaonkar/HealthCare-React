{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8080\",\n  withCredentials: true,\n  // Always send cookies (JWT, refresh)\n  xsrfCookieName: \"XSRF-TOKEN\",\n  xsrfHeaderName: \"X-XSRF-TOKEN\"\n});\n\n// ✅ Axios Interceptor for auto refresh on 401\napi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && !originalRequest._retry && !originalRequest.url.includes(\"/auth/refresh-token\") // ⛔ Prevent looping\n  ) {\n    originalRequest._retry = true;\n    try {\n      await axios.post(\"http://localhost:8080/auth/refresh-token\", {}, {\n        withCredentials: true\n      });\n      return axios(originalRequest);\n    } catch (refreshError) {\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","xsrfCookieName","xsrfHeaderName","interceptors","response","use","error","originalRequest","config","status","_retry","url","includes","post","refreshError","Promise","reject"],"sources":["/Users/alokwaigaonkar/health_care/FrontEnd/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8080\",\n  withCredentials: true, // Always send cookies (JWT, refresh)\n  xsrfCookieName: \"XSRF-TOKEN\",\n  xsrfHeaderName: \"X-XSRF-TOKEN\"\n});\n\n// ✅ Axios Interceptor for auto refresh on 401\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (\n      error.response.status === 401 &&\n      !originalRequest._retry &&\n      !originalRequest.url.includes(\"/auth/refresh-token\") // ⛔ Prevent looping\n    ) {\n      originalRequest._retry = true;\n    \n      try {\n        await axios.post(\"http://localhost:8080/auth/refresh-token\", {}, {\n          withCredentials: true\n        });\n    \n        return axios(originalRequest);\n      } catch (refreshError) {\n        return Promise.reject(refreshError);\n      }\n    }\n    \n\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE,IAAI;EAAE;EACvBC,cAAc,EAAE,YAAY;EAC5BC,cAAc,EAAE;AAClB,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;EACf,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAM;EAEpC,IACEF,KAAK,CAACF,QAAQ,CAACK,MAAM,KAAK,GAAG,IAC7B,CAACF,eAAe,CAACG,MAAM,IACvB,CAACH,eAAe,CAACI,GAAG,CAACC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;EAAA,EACrD;IACAL,eAAe,CAACG,MAAM,GAAG,IAAI;IAE7B,IAAI;MACF,MAAMd,KAAK,CAACiB,IAAI,CAAC,0CAA0C,EAAE,CAAC,CAAC,EAAE;QAC/Db,eAAe,EAAE;MACnB,CAAC,CAAC;MAEF,OAAOJ,KAAK,CAACW,eAAe,CAAC;IAC/B,CAAC,CAAC,OAAOO,YAAY,EAAE;MACrB,OAAOC,OAAO,CAACC,MAAM,CAACF,YAAY,CAAC;IACrC;EACF;EAGA,OAAOC,OAAO,CAACC,MAAM,CAACV,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}