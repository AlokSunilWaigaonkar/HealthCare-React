{"ast":null,"code":"var _jsxFileName = \"/Users/alokwaigaonkar/health_care/src/components/Doctor/PatientRecord.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { motion } from \"framer-motion\";\nimport \"./PatientRecords.css\"; // Custom CSS file for styling\nimport \"./\";\n\n// Dummy patient data (Replace with API data when backend is integrated)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyPatientData = [{\n  timestamp: \"2025-04-07 10:00:00\",\n  heartRate: 72,\n  bodyTemp: 36.6,\n  roomTemp: 24.0,\n  ecg: [0.85, 0.87, 0.89, 0.92, 0.91, 0.89, 0.87, 0.90, 0.88, 0.86, 0.85, 0.83]\n}];\nconst PatientRecords = () => {\n  _s();\n  const [patientData, setPatientData] = useState([]);\n  useEffect(() => {\n    // TODO: Replace this with real API call\n    // fetch(\"/api/patient-records\")\n    //   .then((res) => res.json())\n    //   .then((data) => setPatientData(data))\n    //   .catch((err) => console.error(err));\n\n    // Using dummy data for now\n    setPatientData(dummyPatientData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-records-container\",\n    children: patientData.map((record, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"record-card\",\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        duration: 0.4,\n        delay: index * 0.1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"record-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"record-title\",\n          children: [\"Time: \", record.timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"record-info\",\n          children: [\"Heart Rate: \", record.heartRate, \" bpm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"record-info\",\n          children: [\"Body Temp: \", record.bodyTemp, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"record-info\",\n          children: [\"Room Temp: \", record.roomTemp, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ecg-chart\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: record.ecg.map((val, i) => ({\n                time: i,\n                value: val\n              })),\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                domain: [0.8, 1.0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"value\",\n                stroke: \"#ef4444\",\n                strokeWidth: 2,\n                dot: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientRecords, \"481mG+kSGInUJgmB3lm8G1MiL6U=\");\n_c = PatientRecords;\nexport default PatientRecords;\nvar _c;\n$RefreshReg$(_c, \"PatientRecords\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","motion","jsxDEV","_jsxDEV","dummyPatientData","timestamp","heartRate","bodyTemp","roomTemp","ecg","PatientRecords","_s","patientData","setPatientData","className","children","map","record","index","div","initial","opacity","y","animate","transition","duration","delay","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","val","i","time","value","strokeDasharray","dataKey","domain","type","stroke","strokeWidth","dot","_c","$RefreshReg$"],"sources":["/Users/alokwaigaonkar/health_care/src/components/Doctor/PatientRecord.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { motion } from \"framer-motion\";\nimport \"./PatientRecords.css\"; // Custom CSS file for styling\nimport \"./\"\n\n// Dummy patient data (Replace with API data when backend is integrated)\nconst dummyPatientData = [\n  {\n    timestamp: \"2025-04-07 10:00:00\",\n    heartRate: 72,\n    bodyTemp: 36.6,\n    roomTemp: 24.0,\n    ecg: [0.85, 0.87, 0.89, 0.92, 0.91, 0.89, 0.87, 0.90, 0.88, 0.86, 0.85, 0.83],\n  }\n];\n\nconst PatientRecords = () => {\n  const [patientData, setPatientData] = useState([]);\n\n  useEffect(() => {\n    // TODO: Replace this with real API call\n    // fetch(\"/api/patient-records\")\n    //   .then((res) => res.json())\n    //   .then((data) => setPatientData(data))\n    //   .catch((err) => console.error(err));\n\n    // Using dummy data for now\n    setPatientData(dummyPatientData);\n  }, []);\n\n  return (\n    <div className=\"patient-records-container\">\n      {patientData.map((record, index) => (\n        <motion.div\n          key={index}\n          className=\"record-card\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.4, delay: index * 0.1 }}\n        >\n          <div className=\"record-content\">\n            <h2 className=\"record-title\">Time: {record.timestamp}</h2>\n            <p className=\"record-info\">Heart Rate: {record.heartRate} bpm</p>\n            <p className=\"record-info\">Body Temp: {record.bodyTemp} °C</p>\n            <p className=\"record-info\">Room Temp: {record.roomTemp} °C</p>\n            <div className=\"ecg-chart\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={record.ecg.map((val, i) => ({ time: i, value: val }))}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"time\" />\n                  <YAxis domain={[0.8, 1.0]} />\n                  <Tooltip />\n                  <Line type=\"monotone\" dataKey=\"value\" stroke=\"#ef4444\" strokeWidth={2} dot={false} />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        </motion.div>\n      ))}\n    </div>\n  );\n};\n\nexport default PatientRecords;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}