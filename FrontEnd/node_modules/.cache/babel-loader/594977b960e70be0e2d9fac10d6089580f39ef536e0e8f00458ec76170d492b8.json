{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8080\"\n});\n\n// Attach access token to every request if present\napi.interceptors.request.use(config => {\n  const accessToken = sessionStorage.getItem(\"accessToken\");\n  if (accessToken) {\n    config.headers[\"Authorization\"] = \"Bearer \" + accessToken;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Optional: basic error handler (no auto refresh)\napi.interceptors.response.use(response => response, error => {\n  // You can add global error messages or redirects here if you want\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","accessToken","sessionStorage","getItem","headers","error","Promise","reject","response"],"sources":["/Users/alokwaigaonkar/health_care/FrontEnd/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8080\",\n});\n\n// Attach access token to every request if present\napi.interceptors.request.use(\n  (config) => {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    if (accessToken) {\n      config.headers[\"Authorization\"] = \"Bearer \" + accessToken;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Optional: basic error handler (no auto refresh)\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // You can add global error messages or redirects here if you want\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,WAAW,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;EACzD,IAAIF,WAAW,EAAE;IACfD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGH,WAAW;EAC3D;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAX,GAAG,CAACG,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}