{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8080\",\n  withCredentials: true // Important for sending and receiving cookies\n});\n\n// âœ… Interceptor to handle 401 and attempt token refresh\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      // Attempt to refresh token via cookie\n      await api.post(\"/refresh-token\");\n      return api(originalRequest); // Retry the failed request\n    } catch (refreshError) {\n      console.error(\"ðŸ”´ Token refresh failed. Redirecting to login.\");\n      window.location.href = \"/login\";\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","interceptors","response","use","error","_error$response","originalRequest","config","status","_retry","post","refreshError","console","window","location","href","Promise","reject"],"sources":["/Users/alokwaigaonkar/health_care/FrontEnd/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8080\",\n  withCredentials: true, // Important for sending and receiving cookies\n});\n\n// âœ… Interceptor to handle 401 and attempt token refresh\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        // Attempt to refresh token via cookie\n        await api.post(\"/refresh-token\");\n        return api(originalRequest); // Retry the failed request\n      } catch (refreshError) {\n        console.error(\"ðŸ”´ Token refresh failed. Redirecting to login.\");\n        window.location.href = \"/login\";\n        return Promise.reject(refreshError);\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE,IAAI,CAAE;AACzB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACf,MAAMC,eAAe,GAAGF,KAAK,CAACG,MAAM;EAEpC,IAAI,EAAAF,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBG,MAAM,MAAK,GAAG,IAAI,CAACF,eAAe,CAACG,MAAM,EAAE;IAC7DH,eAAe,CAACG,MAAM,GAAG,IAAI;IAE7B,IAAI;MACF;MACA,MAAMZ,GAAG,CAACa,IAAI,CAAC,gBAAgB,CAAC;MAChC,OAAOb,GAAG,CAACS,eAAe,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOK,YAAY,EAAE;MACrBC,OAAO,CAACR,KAAK,CAAC,gDAAgD,CAAC;MAC/DS,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,OAAOC,OAAO,CAACC,MAAM,CAACN,YAAY,CAAC;IACrC;EACF;EAEA,OAAOK,OAAO,CAACC,MAAM,CAACb,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}