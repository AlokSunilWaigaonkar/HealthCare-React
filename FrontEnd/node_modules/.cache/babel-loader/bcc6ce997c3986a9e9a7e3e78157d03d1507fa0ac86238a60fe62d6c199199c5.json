{"ast":null,"code":"var _jsxFileName = \"/Users/alokwaigaonkar/health_care/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport bgImg from \"/Users/alokwaigaonkar/health_care/src/images/background.jpeg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [errorClass, setErrorClass] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === \"username\") {\n      setUserName(value);\n    }\n    if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const validCredentials = {\n    username: \"doc123\",\n    password: \"doc@123\"\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (userName === \"\" || password === \"\") {\n      setMessage(\"⚠️ Please fill all the fields\");\n      setErrorClass(\"error-box shake\");\n      setTimeout(() => setErrorClass(\"error-box\"), 500); // Remove shake effect after animation\n      return;\n    }\n    if (userName === validCredentials.username && password === validCredentials.password) {\n      setMessage(\"\");\n      setIsLoggedIn(true);\n\n      // Redirect after 2 seconds\n      setTimeout(() => {\n        navigate(\"/DoctorDashBoard\");\n      }, 2000);\n    } else {\n      setMessage(\"Invalid Username or Password\");\n      setErrorClass(\"error-box shake\");\n      setTimeout(() => setErrorClass(\"error-box\"), 500);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: bgImg,\n        alt: \"Login-bg\",\n        className: \"bg-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-body\",\n        children: isLoggedIn ?\n        /*#__PURE__*/\n        // Success Screen\n        _jsxDEV(\"div\", {\n          className: \"success-screen\",\n          children: [\"\\u2705 \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Login Successful\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Redirecting...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card login-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"login-title\",\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: errorClass,\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"\",\n              className: \"login-form\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"username\",\n                placeholder: \"Doc Id \",\n                className: \"m-3 p-2 px-3 input-section\",\n                style: {\n                  borderRadius: \"5px\"\n                },\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Doc Key\",\n                className: \"m-3 p-2 px-3 input-section\",\n                style: {\n                  borderRadius: \"5px\"\n                },\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn submit-button btn-outline-success m-4\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Login, \"i8NQo4zv0JAIsCADqEH+BXaR4bA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","bgImg","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","navigate","userName","setUserName","password","setPassword","message","setMessage","errorClass","setErrorClass","isLoggedIn","setIsLoggedIn","handleInputChange","event","name","value","target","validCredentials","username","handleSubmit","preventDefault","setTimeout","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","action","onSubmit","type","placeholder","style","borderRadius","onChange","_c","$RefreshReg$"],"sources":["/Users/alokwaigaonkar/health_care/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport bgImg from \"/Users/alokwaigaonkar/health_care/src/images/background.jpeg\";\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [errorClass, setErrorClass] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"username\") {\n      setUserName(value);\n    }\n    if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const validCredentials = {\n    username: \"doc123\",\n    password: \"doc@123\",\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (userName === \"\" || password === \"\") {\n      setMessage(\"⚠️ Please fill all the fields\");\n      setErrorClass(\"error-box shake\");\n      setTimeout(() => setErrorClass(\"error-box\"), 500); // Remove shake effect after animation\n      return;\n    }\n\n    if (userName === validCredentials.username && password === validCredentials.password) {\n      setMessage(\"\");\n      setIsLoggedIn(true);\n\n      // Redirect after 2 seconds\n      setTimeout(() => {\n        navigate(\"/DoctorDashBoard\");\n      }, 2000);\n    } else {\n      setMessage(\"Invalid Username or Password\");\n      setErrorClass(\"error-box shake\");\n      setTimeout(() => setErrorClass(\"error-box\"), 500);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"login\">\n        <img src={bgImg} alt=\"Login-bg\" className=\"bg-img\" />\n        <div className=\"login-body\">\n          {isLoggedIn ? (\n            // Success Screen\n            <div className=\"success-screen\">\n              ✅ <b>Login Successful</b>\n              <p>Redirecting...</p>\n            </div>\n          ) : (\n            <div className=\"card login-card\">\n              <div className=\"card-body\">\n                <h1 className=\"login-title\">Log In</h1>\n                {message && <div className={errorClass}>{message}</div>}\n                <form action=\"\" className=\"login-form\" onSubmit={handleSubmit}>\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Doc Id \"\n                    className=\"m-3 p-2 px-3 input-section\"\n                    style={{ borderRadius: \"5px\" }}\n                    onChange={handleInputChange}\n                  />\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Doc Key\"\n                    className=\"m-3 p-2 px-3 input-section\"\n                    style={{ borderRadius: \"5px\" }}\n                    onChange={handleInputChange}\n                  />\n                  <button type=\"submit\" className=\"btn submit-button btn-outline-success m-4\">\n                    Submit\n                  </button>\n                </form>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}