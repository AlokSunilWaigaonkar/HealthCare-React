{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8080\",\n  withCredentials: true\n});\nlet isRefreshing = false;\nlet failedQueue = [];\nconst processQueue = (error, token = null) => {\n  failedQueue.forEach(prom => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\napi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n\n  // Avoid infinite loop by checking if the original request is the refresh endpoint\n  if (originalRequest.url.includes(\"/auth/refresh-token\")) {\n    window.location.href = \"/login\";\n    return Promise.reject(error);\n  }\n  if (error.response && error.response.status === 401 && !originalRequest._retry) {\n    if (isRefreshing) {\n      return new Promise(function (resolve, reject) {\n        failedQueue.push({\n          resolve,\n          reject\n        });\n      }).then(() => api(originalRequest)).catch(err => Promise.reject(err));\n    }\n    originalRequest._retry = true;\n    isRefreshing = true;\n    try {\n      await api.post(\"/auth/refresh-token\");\n      processQueue(null);\n      return api(originalRequest);\n    } catch (refreshError) {\n      processQueue(refreshError, null);\n      window.location.href = \"/login\";\n      return Promise.reject(refreshError);\n    } finally {\n      isRefreshing = false;\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","isRefreshing","failedQueue","processQueue","error","token","forEach","prom","reject","resolve","interceptors","response","use","originalRequest","config","url","includes","window","location","href","Promise","status","_retry","push","then","catch","err","post","refreshError"],"sources":["/Users/alokwaigaonkar/health_care/FrontEnd/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8080\",\n  withCredentials: true,\n});\n\nlet isRefreshing = false;\nlet failedQueue = [];\n\nconst processQueue = (error, token = null) => {\n  failedQueue.forEach((prom) => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\n\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    // Avoid infinite loop by checking if the original request is the refresh endpoint\n    if (originalRequest.url.includes(\"/auth/refresh-token\")) {\n      window.location.href = \"/login\";\n      return Promise.reject(error);\n    }\n\n    if (error.response && error.response.status === 401 && !originalRequest._retry) {\n      if (isRefreshing) {\n        return new Promise(function (resolve, reject) {\n          failedQueue.push({ resolve, reject });\n        })\n          .then(() => api(originalRequest))\n          .catch((err) => Promise.reject(err));\n      }\n\n      originalRequest._retry = true;\n      isRefreshing = true;\n\n      try {\n        await api.post(\"/auth/refresh-token\");\n        processQueue(null);\n        return api(originalRequest);\n      } catch (refreshError) {\n        processQueue(refreshError, null);\n        window.location.href = \"/login\";\n        return Promise.reject(refreshError);\n      } finally {\n        isRefreshing = false;\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,IAAIC,YAAY,GAAG,KAAK;AACxB,IAAIC,WAAW,GAAG,EAAE;AAEpB,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,KAAK,GAAG,IAAI,KAAK;EAC5CH,WAAW,CAACI,OAAO,CAAEC,IAAI,IAAK;IAC5B,IAAIH,KAAK,EAAE;MACTG,IAAI,CAACC,MAAM,CAACJ,KAAK,CAAC;IACpB,CAAC,MAAM;MACLG,IAAI,CAACE,OAAO,CAACJ,KAAK,CAAC;IACrB;EACF,CAAC,CAAC;EACFH,WAAW,GAAG,EAAE;AAClB,CAAC;AAEDL,GAAG,CAACa,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACtB,MAAOP,KAAK,IAAK;EACf,MAAMS,eAAe,GAAGT,KAAK,CAACU,MAAM;;EAEpC;EACA,IAAID,eAAe,CAACE,GAAG,CAACC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;IACvDC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IAC/B,OAAOC,OAAO,CAACZ,MAAM,CAACJ,KAAK,CAAC;EAC9B;EAEA,IAAIA,KAAK,CAACO,QAAQ,IAAIP,KAAK,CAACO,QAAQ,CAACU,MAAM,KAAK,GAAG,IAAI,CAACR,eAAe,CAACS,MAAM,EAAE;IAC9E,IAAIrB,YAAY,EAAE;MAChB,OAAO,IAAImB,OAAO,CAAC,UAAUX,OAAO,EAAED,MAAM,EAAE;QAC5CN,WAAW,CAACqB,IAAI,CAAC;UAAEd,OAAO;UAAED;QAAO,CAAC,CAAC;MACvC,CAAC,CAAC,CACCgB,IAAI,CAAC,MAAM3B,GAAG,CAACgB,eAAe,CAAC,CAAC,CAChCY,KAAK,CAAEC,GAAG,IAAKN,OAAO,CAACZ,MAAM,CAACkB,GAAG,CAAC,CAAC;IACxC;IAEAb,eAAe,CAACS,MAAM,GAAG,IAAI;IAC7BrB,YAAY,GAAG,IAAI;IAEnB,IAAI;MACF,MAAMJ,GAAG,CAAC8B,IAAI,CAAC,qBAAqB,CAAC;MACrCxB,YAAY,CAAC,IAAI,CAAC;MAClB,OAAON,GAAG,CAACgB,eAAe,CAAC;IAC7B,CAAC,CAAC,OAAOe,YAAY,EAAE;MACrBzB,YAAY,CAACyB,YAAY,EAAE,IAAI,CAAC;MAChCX,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,OAAOC,OAAO,CAACZ,MAAM,CAACoB,YAAY,CAAC;IACrC,CAAC,SAAS;MACR3B,YAAY,GAAG,KAAK;IACtB;EACF;EACA,OAAOmB,OAAO,CAACZ,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}