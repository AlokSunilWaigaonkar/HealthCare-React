{"ast":null,"code":"var _jsxFileName = \"/Users/alokwaigaonkar/health_care/FrontEnd/src/components/Doctor/Appointments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../../api\";\nimport \"../../css/Appointments.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Appointments() {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [statusUpdate, setStatusUpdate] = useState({});\n  const doctorId = localStorage.getItem(\"id\");\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const res = await api.get(`/doctor/${doctorId}/appointments`);\n        setAppointments(res.data.data); // Accessing data inside ApiResponseDTO\n      } catch (error) {\n        console.error(\"Error fetching appointments\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (doctorId) fetchAppointments();\n  }, [doctorId]);\n  const handleStatusChange = (appointmentId, newStatus) => {\n    setStatusUpdate(prev => ({\n      ...prev,\n      [appointmentId]: newStatus\n    }));\n  };\n  const updateStatus = async appointmentId => {\n    try {\n      await api.put(`/doctor/appointments/${appointmentId}/status`, null, {\n        params: {\n          status: statusUpdate[appointmentId]\n        }\n      });\n\n      // Refresh appointment list\n      const res = await api.get(`/${doctorId}/appointments`);\n      setAppointments(res.data.data);\n      alert(\"‚úÖ Status updated successfully!\");\n    } catch (error) {\n      console.error(\"Failed to update status\", error);\n      alert(\"‚ùå Failed to update status\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading appointments...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointments-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCCB All Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), appointments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No appointments found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointments-list\",\n      children: appointments.map(appt => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointment-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Patient:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 18\n          }, this), \" \", appt.firstName + \" \" + appointments.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 18\n          }, this), \" \", new Date(appt.dateTime).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Reason:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 18\n          }, this), \" \", appt.reason]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 18\n          }, this), \" \", appt.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: statusUpdate[appt.id] || appt.status,\n          onChange: e => handleStatusChange(appt.id, e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PENDING\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CONFIRMED\",\n            children: \"Confirmed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CANCELLED\",\n            children: \"Cancelled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"COMPLETED\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-2\",\n          onClick: () => updateStatus(appt.id),\n          children: \"Update Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, appt.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Appointments, \"jWzneFPBggE8IekFIzgM+jjzGaE=\");\n_c = Appointments;\nvar _c;\n$RefreshReg$(_c, \"Appointments\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Appointments","_s","appointments","setAppointments","loading","setLoading","statusUpdate","setStatusUpdate","doctorId","localStorage","getItem","fetchAppointments","res","get","data","error","console","handleStatusChange","appointmentId","newStatus","prev","updateStatus","put","params","status","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","appt","firstName","lastName","Date","dateTime","toLocaleString","reason","value","id","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/alokwaigaonkar/health_care/FrontEnd/src/components/Doctor/Appointments.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from \"../../api\";\nimport \"../../css/Appointments.css\";\n\nexport default function Appointments() {\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [statusUpdate, setStatusUpdate] = useState({});\n  const doctorId = localStorage.getItem(\"id\");\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const res = await api.get(`/doctor/${doctorId}/appointments`);\n        setAppointments(res.data.data); // Accessing data inside ApiResponseDTO\n      } catch (error) {\n        console.error(\"Error fetching appointments\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (doctorId) fetchAppointments();\n  }, [doctorId]);\n\n  const handleStatusChange = (appointmentId, newStatus) => {\n    setStatusUpdate((prev) => ({\n      ...prev,\n      [appointmentId]: newStatus\n    }));\n  };\n\n  const updateStatus = async (appointmentId) => {\n    try {\n      await api.put(`/doctor/appointments/${appointmentId}/status`, null, {\n        params: { status: statusUpdate[appointmentId] }\n      });\n\n      // Refresh appointment list\n      const res = await api.get(`/${doctorId}/appointments`);\n      setAppointments(res.data.data);\n      alert(\"‚úÖ Status updated successfully!\");\n    } catch (error) {\n      console.error(\"Failed to update status\", error);\n      alert(\"‚ùå Failed to update status\");\n    }\n  };\n\n  if (loading) return <p>Loading appointments...</p>;\n\n  return (\n    <div className=\"appointments-container\">\n      <h2>üìã All Appointments</h2>\n      {appointments.length === 0 ? (\n        <p>No appointments found.</p>\n      ) : (\n        <div className=\"appointments-list\">\n          {appointments.map((appt) => (\n            <div key={appt.id} className=\"appointment-card\">\n              <p><strong>Patient:</strong> {appt.firstName +\" \"+ appointments.lastName}</p>\n              <p><strong>Date:</strong> {new Date(appt.dateTime).toLocaleString()}</p>\n              <p><strong>Reason:</strong> {appt.reason}</p>\n              <p><strong>Status:</strong> {appt.status}</p>\n\n              <select\n                value={statusUpdate[appt.id] || appt.status}\n                onChange={(e) => handleStatusChange(appt.id, e.target.value)}\n              >\n                <option value=\"PENDING\">Pending</option>\n                <option value=\"CONFIRMED\">Confirmed</option>\n                <option value=\"CANCELLED\">Cancelled</option>\n                <option value=\"COMPLETED\">Completed</option>\n              </select>\n\n              <button className=\"btn btn-primary mt-2\" onClick={() => updateStatus(appt.id)}>\n                Update Status\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}