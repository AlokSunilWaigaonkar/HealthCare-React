{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8080\"\n});\n\n// Attach access token to every request if present\napi.interceptors.request.use(config => {\n  const accessToken = localStorage.getItem(\"token\");\n  if (accessToken) {\n    config.headers[\"Authorization\"] = \"Bearer \" + accessToken;\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n\n  // Prevent infinite retry loop\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry && localStorage.getItem(\"refreshToken\")) {\n    originalRequest._retry = true;\n    try {\n      const res = await axios.post(\"http://localhost:8080/auth/refresh\", {\n        refreshToken: localStorage.getItem(\"refreshToken\")\n      });\n      const newAccessToken = res.data.accessToken;\n      localStorage.setItem(\"token\", newAccessToken);\n\n      // Update Authorization header and retry original request\n      originalRequest.headers[\"Authorization\"] = `Bearer ${newAccessToken}`;\n      return api(originalRequest);\n    } catch (refreshError) {\n      console.log(\"Refresh token expired or invalid\");\n      localStorage.clear();\n      window.location.href = \"/login\";\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","accessToken","localStorage","getItem","headers","error","Promise","reject","response","_error$response","originalRequest","status","_retry","res","post","refreshToken","newAccessToken","data","setItem","refreshError","console","log","clear","window","location","href"],"sources":["/Users/alokwaigaonkar/health_care/FrontEnd/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8080\",\n});\n\n// Attach access token to every request if present\napi.interceptors.request.use(\n  (config) => {\n    const accessToken = localStorage.getItem(\"token\");\n    if (accessToken) {\n      config.headers[\"Authorization\"] = \"Bearer \" + accessToken;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    // Prevent infinite retry loop\n    if (\n      error.response?.status === 401 &&\n      !originalRequest._retry &&\n      localStorage.getItem(\"refreshToken\")\n    ) {\n      originalRequest._retry = true;\n      try {\n        const res = await axios.post(\"http://localhost:8080/auth/refresh\", {\n          refreshToken: localStorage.getItem(\"refreshToken\"),\n        });\n\n        const newAccessToken = res.data.accessToken;\n        localStorage.setItem(\"token\", newAccessToken);\n\n        // Update Authorization header and retry original request\n        originalRequest.headers[\"Authorization\"] = `Bearer ${newAccessToken}`;\n        return api(originalRequest);\n      } catch (refreshError) {\n        console.log(\"Refresh token expired or invalid\");\n        localStorage.clear();\n        window.location.href = \"/login\";\n        return Promise.reject(refreshError);\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACjD,IAAIF,WAAW,EAAE;IACfD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGH,WAAW;EAC3D;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAEDX,GAAG,CAACG,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACf,MAAMC,eAAe,GAAGL,KAAK,CAACL,MAAM;;EAEpC;EACA,IACE,EAAAS,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAC9B,CAACD,eAAe,CAACE,MAAM,IACvBV,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,EACpC;IACAO,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,oCAAoC,EAAE;QACjEC,YAAY,EAAEb,YAAY,CAACC,OAAO,CAAC,cAAc;MACnD,CAAC,CAAC;MAEF,MAAMa,cAAc,GAAGH,GAAG,CAACI,IAAI,CAAChB,WAAW;MAC3CC,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEF,cAAc,CAAC;;MAE7C;MACAN,eAAe,CAACN,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUY,cAAc,EAAE;MACrE,OAAOtB,GAAG,CAACgB,eAAe,CAAC;IAC7B,CAAC,CAAC,OAAOS,YAAY,EAAE;MACrBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/CnB,YAAY,CAACoB,KAAK,CAAC,CAAC;MACpBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,OAAOnB,OAAO,CAACC,MAAM,CAACY,YAAY,CAAC;IACrC;EACF;EAEA,OAAOb,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}